[tool.poetry]
name = "spark-silex"
version = "0.0.0"
description = "Silex adds more sparks to your project!"
authors = ["RickCi <rci-git@pm.me>"]
readme = "README.md"

packages = [ { include = "silex", from = "src" } ]

[tool.poetry.dependencies]
python = ">=3.8, <4"
pyspark = ">=3"

[tool.poetry.dev-dependencies]
bandit = "*"               # security practices                    https://github.com/PyCQA/bandit
behave = "^1.2.6"          # behavioral tests
black = ">=22.3.0"         # automatic linter                      https://github.com/psf/black
coverage = "*"             # unit and bdd tests code coverage
flake8 = "*"               # utility tool                          https://gitlab.com/pycqa/flake8
flake8-black = "*"         # ensure black has been ran
flake8-builtins = "*"      # check for python builtins being used as variables or parameters.
flake8-eradicate = "*"     # checks for dead code
flake8-fixme = "*"         # fix-me and todos
flake8-print = "*"         # print usage, logger should be used
isort = "*"                # sort imports                          https://github.com/timothycrosley/isort
mypy = "*"                 # static type checker                   https://github.com/python/mypy
pre-commit = "*"           # Git hook scripts                      https://pre-commit.com/
pylint = "*"               # code analysis                         https://www.pylint.org/
pytest = "*"               # unit tests                            https://docs.pytest.org/en/latest/
pytest-cov = "*"           # unit tests coverage
safety = "*"               # check for package vulnerabilities     https://github.com/pyupio/safety
tryceratops = "^1.1.0"
ipython = "^8.5.0"
# CD
python-semantic-release = "^7.31.4"

[tool.poetry.urls]
"Changelog" = "https://github.com/RickCi/silex/blob/master/CHANGELOG.md"

[tool.semantic_release]
version_variable = [ "src/silex/__init__.py:__version__" ]
version_toml = [ "pyproject.toml:tool.poetry.version" ]
branch = "master"
upload_to_pypi = true
upload_to_release = true
build_command = "pip install poetry && poetry build"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
